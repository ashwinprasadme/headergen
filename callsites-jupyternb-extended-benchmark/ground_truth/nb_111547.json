{
    "2": [
        "posixpath.join",
        "os.listdir",
        "genericpath.isfile",
        "<builtin>.str.endswith"
    ],
    "3": [
        "<builtin>.len",
        "<builtin>.str.join"
    ],
    "5": [
        "nb_111547.filterEmptyLines:4",
        "<builtin>.open",
        "<builtin>.len",
        "<builtin>.str.split",
        "<builtin>.str.replace",
        "nb_111547.normalizedFields:3"
    ],
    "8": [
        "pandas.io.parsers.readers.read_csv"
    ],
    "9": [
        "<builtin>.len",
        "datetime.datetime",
        "datetime.timedelta.total_seconds",
        "<builtin>.min",
        "<builtin>.max",
        "pandas.core.series.Series.apply",
        "pandas.core.tools.numeric.to_numeric",
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.generic.SeriesGroupBy.apply",
        "nb_111547.calculateDuration:76"
    ],
    "10": [
        "pandas.io.parsers.readers.read_csv"
    ],
    "11": [
        "<builtin>.str.split",
        "pandas.core.strings.accessor.StringMethods.strip",
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.generic.SeriesGroupBy.apply",
        "nb_111547.calculateTotalCcs:91"
    ],
    "12": [
        "pandas.io.parsers.readers.read_csv"
    ],
    "13": [
        "pandas.core.tools.datetimes.to_datetime",
        "pandas.core.series.Series.map",
        "pandas.core.series.Series.apply",
        "pandas.core.tools.numeric.to_numeric",
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.generic.SeriesGroupBy.apply",
        "nb_111547.calculateOpenMonth:104"
    ],
    "14": [
        "pandas.io.parsers.readers.read_csv"
    ],
    "15": [
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.groupby.GroupBy.first"
    ],
    "16": [
        "pandas.io.parsers.readers.read_csv"
    ],
    "17": [
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.groupby.GroupBy.last",
        "pandas.core.groupby.generic.SeriesGroupBy.apply"
    ],
    "18": [
        "pandas.io.parsers.readers.read_csv"
    ],
    "19": [
        "pandas.core.strings.accessor.StringMethods.cat",
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.groupby.GroupBy.apply",
        "nb_111547.obtainAssignee:132"
    ],
    "20": [
        "pandas.core.strings.accessor.StringMethods.cat",
        "pandas.core.generic.NDFrame.astype",
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.groupby.GroupBy.apply",
        "nb_111547.obtainReporter:141"
    ],
    "21": [
        "pandas.core.frame.DataFrame.join"
    ],
    "22": [
        "pandas.core.frame.DataFrame.fillna"
    ],
    "23": [
        "pandas.core.arrays.categorical.Categorical"
    ],
    "24": [
        "sklearn.model_selection._split.train_test_split"
    ],
    "25": [
        "sklearn.model_selection._split.train_test_split",
        "nb_111547.getTrainPlusTestSets:24"
    ],
    "26": [
        "nb_111547.f",
        "pandas.core.frame.DataFrame.join",
        "pandas.core.frame.DataFrame.count",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.groupby.GroupBy.apply",
        "pandas.core.frame.DataFrame.merge",
        "pandas.core.frame.DataFrame"
    ],
    "27": [
        "nb_111547.getProportion:26",
        "pandas.core.frame.DataFrame.join",
        "pandas.core.frame.DataFrame.count",
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.groupby.GroupBy.apply",
        "pandas.core.frame.DataFrame.merge",
        "pandas.core.reshape.reshape.get_dummies"
    ],
    "29": [
        "pandas.core.frame.DataFrame.join",
        "pandas.core.frame.DataFrame.count",
        "pandas.core.frame.DataFrame",
        "pandas.core.frame.DataFrame.groupby",
        "pandas.core.groupby.groupby.GroupBy.apply",
        "pandas.core.frame.DataFrame.merge",
        "pandas.core.reshape.reshape.get_dummies",
        "nb_111547.getProportion:26"
    ],
    "31": [
        "sklearn.linear_model._logistic.LogisticRegression",
        "sklearn.linear_model._logistic.LogisticRegression.fit",
        "numpy.ndarray.ravel"
    ]
}
